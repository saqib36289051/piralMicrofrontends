"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.editEntryOption = exports.editFileOption = exports.editDirectoryOption = void 0;
const path_1 = require("path");
function getFile(fileInfo) {
    const fileName = fileInfo.file;
    return {
        id: Buffer.from(fileName).toString('base64'),
        name: fileName,
        basename: (0, path_1.basename)(fileName),
        active: fileInfo.active,
        error: fileInfo.error,
    };
}
function getEntry(fileInfos, desc) {
    const fileName = fileInfos[0].file;
    return {
        id: Buffer.from(fileName).toString('base64'),
        name: fileName,
        basename: (0, path_1.basename)(fileName),
        entries: fileInfos.map((entry, i) => ({
            active: entry.active,
            error: entry.error,
            description: desc(entry, fileName, i),
        })),
    };
}
function editDirectoryOption(directories) {
    return {
        description: `Select the directories to inspect for matching files.`,
        title: 'Source Directories',
        type: 'directory',
        value: directories,
    };
}
exports.editDirectoryOption = editDirectoryOption;
function editFileOption(files) {
    return {
        description: `Toggle or modify the found files without using an external text editor.`,
        title: 'Found Files',
        type: 'file',
        value: files.map((fileInfo) => getFile(fileInfo)),
    };
}
exports.editFileOption = editFileOption;
function editEntryOption(files, desc) {
    return {
        description: `Modify the found files without using an external text editor or toggle their entries.`,
        title: 'Found Files & Entries',
        type: 'entry',
        value: files.map((subfiles) => getEntry(subfiles, desc)),
    };
}
exports.editEntryOption = editEntryOption;
