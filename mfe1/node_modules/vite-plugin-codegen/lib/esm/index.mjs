// src/index.ts
import { createRequire } from "module";
var requireModule = createRequire(import.meta.url);
function reloadGenerator(name) {
  const path = requireModule.resolve(name);
  delete requireModule.cache[path];
  return requireModule(name);
}
function codegen(options = { outDir: "dist", rootDir: process.cwd() }) {
  return {
    name: "codegen",
    resolveId(source) {
      if (source.endsWith(".codegen")) {
        return source;
      }
      return null;
    },
    load(name) {
      if (name.endsWith(".codegen")) {
        const generator = reloadGenerator(name);
        return generator.call({
          name,
          options,
          addDependency: (file) => {
            this.addWatchFile(file);
          }
        });
      }
      return null;
    }
  };
}
export {
  codegen as default
};
//# sourceMappingURL=index.mjs.map
